<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>AlxiKan's static blog</title><link>http://example.com/blog/index.html</link>
<description>A blog for SW</description><language>en</language>
<lastBuildDate>Fri, 05 May 2023 16:36:59 +0300</lastBuildDate>
<pubDate>Fri, 05 May 2023 16:36:59 +0300</pubDate>
<atom:link href="http://example.com/blog/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Compatible Time-Sharing System
</title><description><![CDATA[

<p>Το Compatible Time-Sharing System (CTSS) αποτελεί ένα από τα πιο παλαιά λειτουργικά συστήματα μιας και αναπτύχθηκε τη δεκαετία του 1960 από μια ομάδα ερευνητών του MIT με οδηγό ανάπτυξης το καθηγητή Fernando J. Corbato. Ήταν ένα επαναστατικό σύστημα το οποίο επέτρεπε τη χρήση ενός υπολογιστή από πολλαπλούς χρήστες, παρέχοντας στον κάθε χρήστη τους αντίστοιχους πόρους (όπως επεξεργαστική δύναμη και μνήμη) που χρειαζόταν.

Τη δεκαετία του 1960, οι υπολογιστές ήταν μεγάλοι σε μέγεθος, ακριβοί, και χρησιμοποιούνταν κυρίως από μεγάλες εταιρίες ή κυβερνητικούς οργανισμούς. Η επεξεργασία ήταν μια διαδικασία χωρίς διαδραστικότητα, όπου ένας χρήστης υπέβαλλε μια διεργασία στον υπολογιστή και μετά θα περίμενε να επιστραφούν τα αποτελέσματα σε κάποια καρτέλα ή χαρτοταινία. Αυτή η διαδικασία ήταν αργή και οι χρόνοι αναμονής μπορούσαν να φτάσουν μέχρι και μέρες ή ακόμη και εβδομάδες. Το CTSS αναπτύχθηκε για να καταπολεμίσει αυτά τα προβλήματα και να προσφέρει τη δυνατότητα χρήσης του υπολογιστή σε πολλαπλούς χρήστες ταυτόχρονα.

Η ανάπτυξη του CTSS έγινε πάνω στη σειρά υπολογιστών IBM 7090/7094 οι οποίοι ήταν από τους πιο δυνατούς υπολογιστές της εποχής. Το λειτουργικό σύστημα γράφτηκε με τη χρήση γλωσσών προγραμματισμού assembly και fortran, και έτρεχε πάνω σε ένα ήδη υπάρχον λειτουργικό σύστημα, το IBM 7090/7094 monitor system (MFT).

To CTSS, για να πετύχει τις δυνατότητες ταυτοχρονισμού που παρείχε, έτρεχε έναν αλγόριθμο δρομολόγισης ο οποίος απέδιδε τους πόρους του υπολογιστή ανάλογα με το δείκτη προταιρεότητας που είχε η κάθε διεργασία. Οι διεργασίες που είχαν υψηλό δείκτη προταιρεότητας εκτελούνταν γρήγορα ενώ αυτές με χαμηλό δείκτη προταιρεότητας εκτελούνταν στις χρονικές φάσεις όπου υπήρχε μεγαλύτερη διαθεσιμότητα πόρων.

Πέρα από την τεχνολογία ταυτοχρονισμού, το CTSS, πρόσφερε στους χρήστες και άλλα χαρακτηριστηκά όπως μία γραμμή εντολών η οποία επέτρεπε στους χρήστες να αλληλεπιδρούν με το σύστημα χρησιμοποιόντας πληκτρολόγιο και οθόνη, και ένα file system το οποίο τους επέτρεπε να αποθηκεύσουν αρχεία στον δίσκο του συστήματος.

Τέλος, το CTSS έδωσε έμπνευση και πάτημα στην ανάπτυξη άλλων τεχνολογιών ταυτοχρονισμού αλλά και στην ανάπτυξη άλλων λειτουργικών συστημάτων όπως του UNIX ή ακόμη και τεχνολογιών όπως το cloud computing.</p>

<p>Tags: <a href='tag_CTSS.html'>CTSS</a></p>
<!-- text end -->
]]></description><link>http://example.com/blog/compatible-time-sharing-system.html</link>
<guid>http://example.com/blog/./compatible-time-sharing-system.html</guid>
<dc:creator>Alexios Kantartzis</dc:creator>
<pubDate>Fri, 05 May 2023 16:36:56 +0300</pubDate></item>
<item><title>
Εισαγωγή
</title><description><![CDATA[

<p>Στο μάθημα Επικοινωνία Ανθρώπου Υπολογιστή είχα την ευκαιρία να πειραματιστώ με το λειτουργικό σύστημα Arch Linux, το οποίο με βοήθησε να κατανοήσω καλύτερα την δομή και οργάνωση ενός λειτουργικού συστήματος, αλλά και το να μάθω να χρησιμοποιώ τον υπολογιστή με έναν διαφορετικό τρόπο σκέψης. Σε αυτό το μάθημα στόχος μου είναι να εμβαθύνω τις γνώσεις μου ακόμη περισσότερο σε αυτό τον τομέα και να αποκτήσω μια πολύ καλύτερη κατανόηση σχετικά με την υλοποίηση, διαχείρηση και συντήριση λογισμικού.</p>


<!-- text end -->
]]></description><link>http://example.com/blog/20404.html</link>
<guid>http://example.com/blog/./20404.html</guid>
<dc:creator>Alexios Kantartzis</dc:creator>
<pubDate>Fri, 05 May 2023 16:33:51 +0300</pubDate></item>
</channel></rss>
